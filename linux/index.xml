<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux-rsses on 李东明的自留地</title>
    <link>https://lidm1989.github.io/linux/index.xml</link>
    <description>Recent content in Linux-rsses on 李东明的自留地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Sat, 29 Oct 2016 22:31:40 +0800</lastBuildDate>
    <atom:link href="https://lidm1989.github.io/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>记windows通过linux共享上网</title>
      <link>https://lidm1989.github.io/linux/%E8%AE%B0windows%E9%80%9A%E8%BF%87linux%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91/</link>
      <pubDate>Sat, 29 Oct 2016 22:31:40 +0800</pubDate>
      
      <guid>https://lidm1989.github.io/linux/%E8%AE%B0windows%E9%80%9A%E8%BF%87linux%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91/</guid>
      <description>

&lt;h1 id=&#34;背景&#34;&gt;背景&lt;/h1&gt;

&lt;p&gt;女友家用笔记本的无线网卡突然罢工了，尝试有线还是能用的。但是网线连接到路由器不够长。我本人台式机装的是archlinux，一块有线网卡，一块USB无线网卡，平时使用USB无线网卡上网。两电脑距离较近，使用网线完全合适，于是想到能不能让windows通过linux上网。作为一个爱折腾的码农，关键时候怎能不好好表现一下，说干就干。&lt;/p&gt;

&lt;h1 id=&#34;环境&#34;&gt;环境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;windows7笔记本一台，双网卡, 一块有线网卡（没用），一块无线网卡（已坏）&lt;/li&gt;
&lt;li&gt;archlinux台式机一台，双网卡，一块有线网卡（没用），一块USB无线网卡（正常上网）&lt;/li&gt;
&lt;li&gt;普通网线（双绞线）一根&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;目的：通过网线连接两块有线网卡，使windows通过linux上网&lt;/p&gt;

&lt;h1 id=&#34;配置步骤&#34;&gt;配置步骤&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;用网线连接两块有线网卡&lt;/li&gt;
&lt;li&gt;开启ip转发&lt;code&gt;sysctl net.ipv4.ip_forward=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开启nat伪装&lt;code&gt;iptables -t nat -A POSTROUTING -j MASQUERADE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置linux有线网卡静态IP: &lt;code&gt;192.168.1.2/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置windows有线网卡静态IP: &lt;code&gt;192.168.1.3&lt;/code&gt;，MASK: &lt;code&gt;255.255.255.0&lt;/code&gt;, GATEWAY: &lt;code&gt;192.168.1.2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置windows的DNS为linux机器上的DNS或者google公共DNS: 8.8.8.8&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;观察网络&#34;&gt;观察网络&lt;/h1&gt;

&lt;p&gt;在linux上观察windows ping百度的网络数据，其中192.168.0.114是linux上USB无线网卡的IP地址：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@arch ~]# tcpdump -i any -nn icmp
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes
23:00:03.298518 IP 192.168.1.3 &amp;gt; 115.239.210.27: ICMP echo request, id 1, seq 54, length 40
23:00:03.298560 IP 192.168.0.114 &amp;gt; 115.239.210.27: ICMP echo request, id 1, seq 54, length 40
23:00:03.307090 IP 115.239.210.27 &amp;gt; 192.168.0.114: ICMP echo reply, id 1, seq 54, length 40
23:00:03.307120 IP 115.239.210.27 &amp;gt; 192.168.1.3: ICMP echo reply, id 1, seq 54, length 40
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;分析:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;由于windows网关为192.168.1.2，windows将数据包发送到linux有线网卡&lt;/li&gt;
&lt;li&gt;由于linux开启了ip转发，linux将数据包通过无线网卡发送到路由并启用nat伪装&lt;/li&gt;
&lt;li&gt;接着路由将回应包发送到linux无线网卡&lt;/li&gt;
&lt;li&gt;此时linux知道该包是自己nat伪装的，将数据包通过有线网卡转发到windows&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;windows与linux通过网线组成的局域网不能和无线网处于同一网段&lt;/li&gt;
&lt;li&gt;必须配置windows的网关为linux上有线网卡的IP地址&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>常用调试工具</title>
      <link>https://lidm1989.github.io/linux/%E5%B8%B8%E7%94%A8%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 24 Oct 2016 21:14:38 +0800</pubDate>
      
      <guid>https://lidm1989.github.io/linux/%E5%B8%B8%E7%94%A8%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/</guid>
      <description>

&lt;p&gt;linux下常用调试工具&lt;/p&gt;

&lt;h1 id=&#34;fuser&#34;&gt;fuser&lt;/h1&gt;

&lt;p&gt;fuser使用文件或者套节字来识别进程&lt;/p&gt;

&lt;h3 id=&#34;示例&#34;&gt;示例&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;fuser &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;常用选项&#34;&gt;常用选项&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;-n        # 指定namespace(file, tcp, udp)
-m        # 指定挂载点
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;lsof&#34;&gt;lsof&lt;/h1&gt;

&lt;p&gt;lsof（list open files）列出当前系统打开文件&lt;/p&gt;

&lt;h3 id=&#34;示例-1&#34;&gt;示例&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;lsof
lsof -p 1234
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;常用选项-1&#34;&gt;常用选项&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;-p &amp;lt;pid&amp;gt;  # 指定特定进程
-c &amp;lt;cmd&amp;gt;  # 指定命令
-n        # 不解析主机名
-P        # 不解析端口号
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;gstack&#34;&gt;gstack&lt;/h1&gt;

&lt;p&gt;gstack打印的堆栈信息&lt;/p&gt;

&lt;h3 id=&#34;示例-2&#34;&gt;示例&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;gstack &amp;lt;pid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;strace&#34;&gt;strace&lt;/h1&gt;

&lt;p&gt;strace常用来跟踪进程执行时的系统调用和所接收的信号。 在Linux世界，进程不能直接访问硬件设备，当进程需要访问硬件设备(比如读取磁盘文件，接收网络数据等等)时，必须由用户态模式切换至内核态模式，通过系统调用访问硬件设备。strace可以跟踪到一个进程产生的系统调用,包括参数，返回值，执行消耗的时间。&lt;/p&gt;

&lt;h3 id=&#34;示例-3&#34;&gt;示例&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;strace cat /dev/null
strace -p 1234
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;常用选项-2&#34;&gt;常用选项&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;-p &amp;lt;pid&amp;gt;       # 指定特定进程
-o &amp;lt;filename&amp;gt;  # 输出到文件
-f             # 踪子进程
-ff            # 跟-o连用，每个进程输出到各自文件
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;tcpdump&#34;&gt;tcpdump&lt;/h1&gt;

&lt;p&gt;tcpdump抓包&lt;/p&gt;

&lt;h3 id=&#34;示例-4&#34;&gt;示例&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;tcpdump -i eth0 src 192.168.1.1 and tcp port 22
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;常用选项-3&#34;&gt;常用选项&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;-i &amp;lt;interface&amp;gt;  # 指定网卡
-w &amp;lt;filename&amp;gt;   # 输出到文件
-nn             # 不进行地址解析
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>